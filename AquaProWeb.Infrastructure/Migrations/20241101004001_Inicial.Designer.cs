// <auto-generated />
using System;
using AquaProWeb.Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;

#nullable disable

namespace AquaProWeb.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241101004001_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AquaProWeb.Domain.Entities.AnotacioCampanya", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CampanyaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("Date");

                    b.Property<string>("Descripcio")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("OperariId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampanyaId");

                    b.HasIndex("OperariId");

                    b.ToTable("AnotacionsCampanyes");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.AnotacioContracte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContracteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("Date");

                    b.Property<string>("Descripcio")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("OperariId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContracteId");

                    b.HasIndex("OperariId");

                    b.ToTable("AnotacionsContractes");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.AnotacioFactura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("Date");

                    b.Property<string>("Descripcio")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("FacturaId")
                        .HasColumnType("int");

                    b.Property<string>("Observacions")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("OperariId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacturaId");

                    b.HasIndex("OperariId");

                    b.ToTable("AnotacionsFactures");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.AnotacioOrdreTreball", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("Date");

                    b.Property<string>("Descripcio")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("OperariId")
                        .HasColumnType("int");

                    b.Property<int>("OrdreTreballId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperariId");

                    b.HasIndex("OrdreTreballId");

                    b.ToTable("AnotacionsOrdresTreball");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.AnotacioRebut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("Date");

                    b.Property<string>("Descripcio")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("OperariId")
                        .HasColumnType("int");

                    b.Property<int>("RebutId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperariId");

                    b.HasIndex("RebutId");

                    b.ToTable("AnotacionsRebuts");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Avis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataFi")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DataInici")
                        .HasColumnType("Date");

                    b.Property<string>("Emails")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("EnviarEmail")
                        .HasColumnType("bit");

                    b.Property<int>("Importancia")
                        .HasColumnType("int");

                    b.Property<string>("Missatge")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Usuari")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Avisos");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.BlocTarifa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Actiu")
                        .HasColumnType("bit");

                    b.Property<int>("Bloc")
                        .HasColumnType("int");

                    b.Property<string>("Descripcio")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double>("M3Adicionals")
                        .HasColumnType("float");

                    b.Property<int>("Ordre")
                        .HasColumnType("int");

                    b.Property<decimal>("Preu")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SubconcepteTarifaId")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.Property<int>("Versio")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubconcepteTarifaId");

                    b.ToTable("BlocsTarifa");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Campanya", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCampanya")
                        .HasColumnType("Date");

                    b.Property<DateTime?>("DataFinal")
                        .HasColumnType("Date");

                    b.Property<DateTime?>("DataInici")
                        .HasColumnType("Date");

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("TipusCampanyaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipusCampanyaId");

                    b.ToTable("Campanyes");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.CanalCobrament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BIC")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Canal")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("FormaPagament")
                        .HasColumnType("int");

                    b.Property<string>("Observacions")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.ToTable("CanalsCobrament");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Carrer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaVia")
                        .HasColumnType("int");

                    b.Property<string>("CodiPostal")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PoblacioId")
                        .HasColumnType("int");

                    b.Property<int>("TipusViaId")
                        .HasColumnType("int");

                    b.Property<int>("ZonaCarrersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PoblacioId");

                    b.HasIndex("TipusViaId");

                    b.HasIndex("ZonaCarrersId");

                    b.ToTable("Carrers");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.CartaCampanya", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CampanyaId")
                        .HasColumnType("int");

                    b.Property<int>("ContracteId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("RutaCarta")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CampanyaId");

                    b.HasIndex("ContracteId");

                    b.ToTable("CartesCampanyes");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adressa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CodiPostal")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<DateTime>("DataAlta")
                        .HasColumnType("Date");

                    b.Property<DateTime?>("DataBaixa")
                        .HasColumnType("Date");

                    b.Property<string>("DocumentIdentificacio")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("EMail1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EMail2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EMail3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IBAN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mobil1")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Mobil2")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Mobil3")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PaisId")
                        .HasColumnType("int");

                    b.Property<string>("Poblacio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PrimerCognom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("RebCartes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("RebFactures")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("RebRebuts")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("ResteAdressa")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SegonCognom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefon1")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Telefon2")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Telefon3")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("TipusClientId")
                        .HasColumnType("int");

                    b.Property<int>("TipusContacte")
                        .HasColumnType("int");

                    b.Property<int>("TipusDocumentIdentificacio")
                        .HasColumnType("int");

                    b.Property<int>("TipusViaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.HasIndex("TipusClientId");

                    b.HasIndex("TipusViaId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Component", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Descripcio")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("EscomesaId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("Id");

                    b.HasIndex("EscomesaId");

                    b.ToTable("Components");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Comptador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Classe")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Codi")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("DataBaixa")
                        .HasColumnType("Date");

                    b.Property<DateTime?>("DataCompra")
                        .HasColumnType("Date");

                    b.Property<int>("Diametre")
                        .HasColumnType("int");

                    b.Property<int>("Digits")
                        .HasColumnType("int");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.Property<string>("Microxip")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PeriodeRevisio")
                        .HasColumnType("int");

                    b.Property<int>("TipusComptadorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.HasIndex("TipusComptadorId");

                    b.ToTable("Comptadors");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.ComptadorUbicacio", b =>
                {
                    b.Property<int>("ComptadorId")
                        .HasColumnType("int");

                    b.Property<int>("UbicacioId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataBaixa")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DataInstalacio")
                        .HasColumnType("Date");

                    b.Property<string>("Observacions")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("OperariBaixaId")
                        .HasColumnType("int");

                    b.Property<int?>("OperariId")
                        .HasColumnType("int");

                    b.Property<int?>("OperariId1")
                        .HasColumnType("int");

                    b.Property<int?>("OperariInstalacioId")
                        .HasColumnType("int");

                    b.HasKey("ComptadorId", "UbicacioId");

                    b.HasIndex("OperariBaixaId");

                    b.HasIndex("OperariId");

                    b.HasIndex("OperariId1");

                    b.HasIndex("OperariInstalacioId");

                    b.HasIndex("UbicacioId");

                    b.ToTable("ComptadorsUbicacio");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.CompteRemesaBanc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activa")
                        .HasColumnType("bit");

                    b.Property<string>("BIC")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Descripcio")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("IBAN")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Sufixe")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("Id");

                    b.ToTable("ComptesRemesaBanc");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.CompteTransferenciaClient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activa")
                        .HasColumnType("bit");

                    b.Property<string>("BIC")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Descripcio")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("IBAN")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("Id");

                    b.ToTable("ComptesTransferenciaClient");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.ConcepteCobrament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodiComptable")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Concepte")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("Id");

                    b.ToTable("ConceptesCobrament");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.ConcepteFactura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codi")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("CodiComptable")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<double>("Descompte")
                        .HasColumnType("float");

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Emmagatzemable")
                        .HasColumnType("bit");

                    b.Property<double>("Estoc")
                        .HasColumnType("float");

                    b.Property<double>("EstocMinim")
                        .HasColumnType("float");

                    b.Property<int>("FamiliaConcepteFacturaId")
                        .HasColumnType("int");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal>("PVP")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PreuCompra")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PreuTarifa")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PreuUltimaCompra")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipusConcepteFacturaId")
                        .HasColumnType("int");

                    b.Property<int?>("Unitat")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FamiliaConcepteFacturaId");

                    b.HasIndex("TipusConcepteFacturaId");

                    b.ToTable("ConceptesFactura");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.ConcepteTarifa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Actiu")
                        .HasColumnType("bit");

                    b.Property<string>("CodiComptable")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Descripcio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("Observacions")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Ordre")
                        .HasColumnType("int");

                    b.Property<int?>("ServeiTarifaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("ServeiTarifaId");

                    b.ToTable("ConceptesTarifa");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.ContacteContracte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("ContracteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAlta")
                        .HasColumnType("Date");

                    b.Property<DateTime?>("DataBaixa")
                        .HasColumnType("Date");

                    b.Property<int?>("MotiuBaixaContacteId")
                        .HasColumnType("int");

                    b.Property<string>("Observacions")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("TipusContacte")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ContracteId");

                    b.HasIndex("MotiuBaixaContacteId");

                    b.ToTable("ContactesContracte");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Contracte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Butlleti")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ConsumCompensar")
                        .HasColumnType("float");

                    b.Property<double>("ConsumMaxim")
                        .HasColumnType("float");

                    b.Property<double>("ConsumMinim")
                        .HasColumnType("float");

                    b.Property<double>("ConsumPromig")
                        .HasColumnType("float");

                    b.Property<DateTime>("DataAlta")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DataAltaFacturacio")
                        .HasColumnType("Date");

                    b.Property<DateTime?>("DataBaixa")
                        .HasColumnType("Date");

                    b.Property<DateTime?>("DataButlleti")
                        .HasColumnType("Date");

                    b.Property<DateTime?>("DataCedula")
                        .HasColumnType("Date");

                    b.Property<DateTime?>("DataReferencia")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DataSolicitud")
                        .HasColumnType("Date");

                    b.Property<DateTime?>("DataTall")
                        .HasColumnType("Date");

                    b.Property<DateTime?>("DataVenciment")
                        .HasColumnType("Date");

                    b.Property<int>("DuracioContracte")
                        .HasColumnType("int");

                    b.Property<bool>("Empleat")
                        .HasColumnType("bit");

                    b.Property<bool>("Facturable")
                        .HasColumnType("bit");

                    b.Property<int>("FamiliaId")
                        .HasColumnType("int");

                    b.Property<int>("Idioma")
                        .HasColumnType("int");

                    b.Property<string>("Observacions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeriodeFacturacio")
                        .HasColumnType("int");

                    b.Property<double>("PressioContractada")
                        .HasColumnType("float");

                    b.Property<int>("PropietatComptador")
                        .HasColumnType("int");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Revisio")
                        .HasColumnType("int");

                    b.Property<bool>("SubministramentTallat")
                        .HasColumnType("bit");

                    b.Property<bool>("Tallable")
                        .HasColumnType("bit");

                    b.Property<int>("Tipus")
                        .HasColumnType("int");

                    b.Property<int>("TipusSubministrament")
                        .HasColumnType("int");

                    b.Property<int>("UbicacioId")
                        .HasColumnType("int");

                    b.Property<int>("UsId")
                        .HasColumnType("int");

                    b.Property<double>("VolumContractat")
                        .HasColumnType("float");

                    b.Property<int>("ZonaFacturacioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FamiliaId");

                    b.HasIndex("UbicacioId");

                    b.HasIndex("UsId");

                    b.HasIndex("ZonaFacturacioId");

                    b.ToTable("Contractes");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.ContracteTarifaServei", b =>
                {
                    b.Property<int>("ContracteId")
                        .HasColumnType("int");

                    b.Property<int>("TarifaServeiId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataFiTarifa")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DataIniciTarifa")
                        .HasColumnType("Date");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("ContracteId", "TarifaServeiId");

                    b.HasIndex("TarifaServeiId");

                    b.ToTable("ContractesTarifaServei");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.DetallFactura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ConcepteFacturaId")
                        .HasColumnType("int");

                    b.Property<double>("Descompte")
                        .HasColumnType("float");

                    b.Property<string>("Descripcio")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("FacturaId")
                        .HasColumnType("int");

                    b.Property<decimal>("Preu")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("Quantitat")
                        .HasColumnType("float");

                    b.Property<double>("Taxa")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ConcepteFacturaId");

                    b.HasIndex("FacturaId");

                    b.ToTable("DetallsFactura");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.DetallOrdreTreball", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ActualitzatEstoc")
                        .HasColumnType("bit");

                    b.Property<int?>("ConcepteFacturaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataConcepte")
                        .HasColumnType("Date");

                    b.Property<double>("Descompte")
                        .HasColumnType("float");

                    b.Property<string>("Descripcio")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("OperariId")
                        .HasColumnType("int");

                    b.Property<int>("OrdreTreballId")
                        .HasColumnType("int");

                    b.Property<decimal>("PreuCost")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PreuVenda")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("Quantitat")
                        .HasColumnType("float");

                    b.Property<double>("Taxa")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ConcepteFacturaId");

                    b.HasIndex("OperariId");

                    b.HasIndex("OrdreTreballId");

                    b.ToTable("DetallsOrdresTreball");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.DetallRebut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("RebutId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RebutId");

                    b.ToTable("DetallRebut");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssociatA")
                        .HasColumnType("int");

                    b.Property<string>("AutorCreacio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AutorModificacio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ContracteId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataCreacio")
                        .HasColumnType("Date");

                    b.Property<DateTime?>("DataModificacio")
                        .HasColumnType("Date");

                    b.Property<string>("Descripcio")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("DocumentAssociatId")
                        .HasColumnType("int");

                    b.Property<int>("IdDocument")
                        .HasColumnType("int");

                    b.Property<int?>("LecturaId")
                        .HasColumnType("int");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Ruta")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TipusDocumentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContracteId");

                    b.HasIndex("LecturaId");

                    b.HasIndex("TipusDocumentId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.DocumentCampanya", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CampanyaId")
                        .HasColumnType("int");

                    b.Property<int?>("FacturaId")
                        .HasColumnType("int");

                    b.Property<decimal>("Import")
                        .HasColumnType("decimal (18,2)");

                    b.Property<decimal>("ImportCobrat")
                        .HasColumnType("decimal (18,2)");

                    b.Property<decimal>("ImportDespeses")
                        .HasColumnType("decimal (18,2)");

                    b.Property<int?>("RebutId")
                        .HasColumnType("int");

                    b.Property<int?>("SituacioFacturaId")
                        .HasColumnType("int");

                    b.Property<int?>("SituacioRebutId")
                        .HasColumnType("int");

                    b.Property<int?>("TipusDocumentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampanyaId");

                    b.HasIndex("FacturaId");

                    b.HasIndex("RebutId");

                    b.HasIndex("SituacioFacturaId");

                    b.HasIndex("SituacioRebutId");

                    b.HasIndex("TipusDocumentId");

                    b.ToTable("DocumentsCampanya");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CIF")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("CP")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("Direccio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Mobil")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("NomCurtEmpresa")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("NomEmpresa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Poblacio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefon")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("WWW")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Empreses");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.EntregaACompte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ConcepteCobramentId")
                        .HasColumnType("int");

                    b.Property<int>("ContracteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataEntrega")
                        .HasColumnType("Date");

                    b.Property<decimal>("Import")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("Id");

                    b.HasIndex("ConcepteCobramentId");

                    b.HasIndex("ContracteId");

                    b.ToTable("EntreguesACompte");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Escomesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("CoeficientCabdal")
                        .HasColumnType("real");

                    b.Property<string>("Descripcio")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<float>("DiametreEscomesa")
                        .HasColumnType("real");

                    b.Property<float>("DiametreNominal")
                        .HasColumnType("real");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Observacions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PressioAssaigAdmisible")
                        .HasColumnType("real");

                    b.Property<float>("PressioDisseny")
                        .HasColumnType("real");

                    b.Property<float>("PressioFuncionamentAdmisible")
                        .HasColumnType("real");

                    b.Property<float>("PressioMaximaAdmisible")
                        .HasColumnType("real");

                    b.Property<float>("PressioMaximaDisseny")
                        .HasColumnType("real");

                    b.Property<float>("PressioNominal")
                        .HasColumnType("real");

                    b.Property<int>("RamalId")
                        .HasColumnType("int");

                    b.Property<string>("ValvulaPasIntegral")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RamalId");

                    b.ToTable("Escomeses");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Explotacio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codi")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Explotacions");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Factura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClientEnviamentId")
                        .HasColumnType("int");

                    b.Property<int?>("ClientFacturarId")
                        .HasColumnType("int");

                    b.Property<int?>("ClientPagamentId")
                        .HasColumnType("int");

                    b.Property<int>("ConcepteCobramentId")
                        .HasColumnType("int");

                    b.Property<int?>("ContracteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataFactura")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DataSituacio")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DataVenciment")
                        .HasColumnType("Date");

                    b.Property<int>("EstatFactura")
                        .HasColumnType("int");

                    b.Property<int?>("FacturaOrigenId")
                        .HasColumnType("int");

                    b.Property<int>("FormaPagament")
                        .HasColumnType("int");

                    b.Property<int>("ModeFactura")
                        .HasColumnType("int");

                    b.Property<string>("NumFactura")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int?>("OperariId")
                        .HasColumnType("int");

                    b.Property<int?>("OrdreTreballId")
                        .HasColumnType("int");

                    b.Property<string>("Postfix")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Prefix")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int?>("RebutOrigenId")
                        .HasColumnType("int");

                    b.Property<int>("SerieFacturaId")
                        .HasColumnType("int");

                    b.Property<int>("SituacioFacturaId")
                        .HasColumnType("int");

                    b.Property<int>("TipusFacturaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientEnviamentId");

                    b.HasIndex("ClientFacturarId");

                    b.HasIndex("ClientPagamentId");

                    b.HasIndex("ConcepteCobramentId");

                    b.HasIndex("ContracteId");

                    b.HasIndex("FacturaOrigenId");

                    b.HasIndex("OperariId");

                    b.HasIndex("OrdreTreballId");

                    b.HasIndex("RebutOrigenId");

                    b.HasIndex("SituacioFacturaId");

                    b.HasIndex("TipusFacturaId");

                    b.ToTable("Factures");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.FacturaCampanya", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CampanyaId")
                        .HasColumnType("int");

                    b.Property<int>("Estat")
                        .HasColumnType("int");

                    b.Property<decimal>("Import")
                        .HasColumnType("decimal (18,2)");

                    b.Property<decimal>("ImportCobrat")
                        .HasColumnType("decimal (18,2)");

                    b.Property<decimal>("ImportDespeses")
                        .HasColumnType("decimal (18,2)");

                    b.Property<int>("NumFactura")
                        .HasColumnType("int");

                    b.Property<int>("SituacioFacturaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SituacioFacturaId");

                    b.ToTable("FacturaCampanya");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.FamiliaConcepteFactura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Familia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("Id");

                    b.ToTable("FamiliesConcepteFactura");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.FamiliaContracte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codi")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Descripcio")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Familia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Observacions")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FamiliesContracte");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Imatge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("Date");

                    b.Property<string>("Descripcio")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Ruta")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Imatges");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.IncidenciaClient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcio")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Incidencia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Observacions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipusIncidenciaClientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("TipusIncidenciaClientId");

                    b.ToTable("IncidenciesClient");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.IncidenciaContracte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ContracteId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcio")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Incidencia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Observacions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipusIncidenciaContracteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContracteId");

                    b.HasIndex("TipusIncidenciaContracteId");

                    b.ToTable("IncidenciesContracte");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.IncidenciaCreacioLectura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContracteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataIncidencia")
                        .HasColumnType("Date");

                    b.Property<int>("Periode")
                        .HasColumnType("int");

                    b.Property<int>("TipusIncidencia")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("IncidenciesCreacioLectura");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.IncidenciaTecnica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Caracter")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataFinal")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DataIncidencia")
                        .HasColumnType("Date");

                    b.Property<DateTime?>("DataInici")
                        .HasColumnType("Date");

                    b.Property<string>("Descripcio")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Solucio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ubicacio")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("Id");

                    b.ToTable("IncidenciesTecniques");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.IncidenciaUbicacio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcio")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Incidencia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Observacions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipusIncidenciaUbicacioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipusIncidenciaUbicacioId");

                    b.ToTable("IncidenciesUbicacio");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Lectura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("BonificarFuita")
                        .HasColumnType("bit");

                    b.Property<double>("ConsumBonificarFuita")
                        .HasColumnType("float");

                    b.Property<double>("ConsumEstimat")
                        .HasColumnType("float");

                    b.Property<double>("ConsumImputat")
                        .HasColumnType("float");

                    b.Property<double>("ConsumLectura")
                        .HasColumnType("float");

                    b.Property<int>("ContracteId")
                        .HasColumnType("int");

                    b.Property<bool>("Fuita")
                        .HasColumnType("bit");

                    b.Property<string>("Observacions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrdreRuta")
                        .HasColumnType("int");

                    b.Property<int>("Periode")
                        .HasColumnType("int");

                    b.Property<int>("PeriodeFacturacio")
                        .HasColumnType("int");

                    b.Property<int>("RutaId")
                        .HasColumnType("int");

                    b.Property<int>("Situacio")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContracteId");

                    b.HasIndex("RutaId");

                    b.ToTable("Lectures");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.LecturaComptador", b =>
                {
                    b.Property<int>("LecturaId")
                        .HasColumnType("int");

                    b.Property<int>("ComptadorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataLecturaFinal")
                        .HasColumnType("Date");

                    b.Property<DateTime?>("DataLecturaInicial")
                        .HasColumnType("Date");

                    b.Property<int>("IncidenciaComptador")
                        .HasColumnType("int");

                    b.Property<int>("IncidenciaConsum")
                        .HasColumnType("int");

                    b.Property<double>("LecturaFinal")
                        .HasColumnType("float");

                    b.Property<double>("LecturaInicial")
                        .HasColumnType("float");

                    b.Property<int>("OperariId")
                        .HasColumnType("int");

                    b.Property<int>("Tipus")
                        .HasColumnType("int");

                    b.Property<int>("TipusIncidenciaLecturaId")
                        .HasColumnType("int");

                    b.HasKey("LecturaId", "ComptadorId");

                    b.HasIndex("ComptadorId");

                    b.HasIndex("OperariId");

                    b.HasIndex("TipusIncidenciaLecturaId");

                    b.ToTable("LecturesComptador");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.MarcaComptador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Fabricant")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("MarquesComptadors");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.MotiuBaixaComptador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Motiu")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MotiusBaixaComptador");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.MotiuBaixaContacte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Motiu")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MotiusBaixaContacte");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.MotiuBaixaTitular", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Motiu")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MotiusBaixaTitular");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.MotiuBaixaTitularCompte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Motiu")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MotiusBaixaCompte");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Operari", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Mobil")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Tipus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Operaris");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.OperariOrdre", b =>
                {
                    b.Property<int>("OrdreTreballId")
                        .HasColumnType("int");

                    b.Property<int>("OperariId")
                        .HasColumnType("int");

                    b.Property<int?>("OperariId1")
                        .HasColumnType("int");

                    b.HasKey("OrdreTreballId", "OperariId");

                    b.HasIndex("OperariId");

                    b.HasIndex("OperariId1");

                    b.ToTable("OperarisOrdre");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.OrdreTreball", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CampanyaId")
                        .HasColumnType("int");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<int?>("ContracteId")
                        .HasColumnType("int");

                    b.Property<int>("CreadorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCreacio")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DataSituacio")
                        .HasColumnType("Date");

                    b.Property<string>("Descripcio")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("EnviadaApp")
                        .HasColumnType("bit");

                    b.Property<bool>("Facturable")
                        .HasColumnType("bit");

                    b.Property<Point>("Geolocalitzacio")
                        .HasColumnType("geography");

                    b.Property<int?>("OperariId")
                        .HasColumnType("int");

                    b.Property<int?>("OperariId1")
                        .HasColumnType("int");

                    b.Property<int>("Origen")
                        .HasColumnType("int");

                    b.Property<int>("Prioritat")
                        .HasColumnType("int");

                    b.Property<bool>("Recurrent")
                        .HasColumnType("bit");

                    b.Property<int>("ResponsableId")
                        .HasColumnType("int");

                    b.Property<int>("Situacio")
                        .HasColumnType("int");

                    b.Property<int>("SituacioAdministrativaOTId")
                        .HasColumnType("int");

                    b.Property<string>("Solucio")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("TallSubministrament")
                        .HasColumnType("bit");

                    b.Property<int>("TipusOrdreTreballId")
                        .HasColumnType("int");

                    b.Property<string>("Ubicacio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ZonaOrdreTreballId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampanyaId");

                    b.HasIndex("ClientId");

                    b.HasIndex("ContracteId");

                    b.HasIndex("CreadorId");

                    b.HasIndex("OperariId");

                    b.HasIndex("OperariId1");

                    b.HasIndex("ResponsableId");

                    b.HasIndex("SituacioAdministrativaOTId");

                    b.HasIndex("TipusOrdreTreballId");

                    b.HasIndex("ZonaOrdreTreballId");

                    b.ToTable("OrdresTreball");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codi")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("NomPais")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("Id");

                    b.ToTable("Paisos");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Parametre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("ValorData")
                        .HasColumnType("Date");

                    b.Property<double?>("ValorNumeric")
                        .HasColumnType("float");

                    b.Property<string>("ValorString")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Parametre");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.PartidaTarifa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Partida")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("PartidesTarifa");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Poblacio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodiINE")
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<int>("ExplotacioId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ExplotacioId");

                    b.ToTable("Poblacions");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Queixa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CanalEntrada")
                        .HasColumnType("int");

                    b.Property<int>("ContracteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("Date");

                    b.Property<DateTime?>("DataLimitResolucio")
                        .HasColumnType("Date");

                    b.Property<DateTime?>("DataResposta")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DataSituacio")
                        .HasColumnType("Date");

                    b.Property<string>("Descripcio")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Resposta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Situacio")
                        .HasColumnType("int");

                    b.Property<int>("TipusQueixaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContracteId");

                    b.HasIndex("TipusQueixaId");

                    b.ToTable("Queixes");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Ramal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcio")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("Id");

                    b.ToTable("Ramals");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Rebut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClientEnviamentId")
                        .HasColumnType("int");

                    b.Property<int>("ClientFacturarId")
                        .HasColumnType("int");

                    b.Property<int?>("ClientPagamentId")
                        .HasColumnType("int");

                    b.Property<string>("Comptador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ConcepteCobramentId")
                        .HasColumnType("int");

                    b.Property<double>("ConsumEstimat")
                        .HasColumnType("float");

                    b.Property<double>("ConsumFacturat")
                        .HasColumnType("float");

                    b.Property<double>("ConsumImputat")
                        .HasColumnType("float");

                    b.Property<double>("ConsumLectura")
                        .HasColumnType("float");

                    b.Property<int>("ContracteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataLecturaActual")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DataLecturaAnterior")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DataRebut")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DataSituacio")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DataVenciment")
                        .HasColumnType("Date");

                    b.Property<int>("EstatRebut")
                        .HasColumnType("int");

                    b.Property<int>("FormaPagament")
                        .HasColumnType("int");

                    b.Property<decimal>("ImportBaseImposable")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ImportCobrat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ImportIVA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("LecturaActual")
                        .HasColumnType("float");

                    b.Property<double>("LecturaAnterior")
                        .HasColumnType("float");

                    b.Property<string>("NumRebut")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int>("Periode")
                        .HasColumnType("int");

                    b.Property<string>("Postfix")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Prefix")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int?>("RebutId")
                        .HasColumnType("int");

                    b.Property<int?>("RebutOriginalId")
                        .HasColumnType("int");

                    b.Property<int>("SerieRebutId")
                        .HasColumnType("int");

                    b.Property<int>("SituacioRebutId")
                        .HasColumnType("int");

                    b.Property<int>("TipusRebut")
                        .HasColumnType("int");

                    b.Property<int>("UbicacioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientEnviamentId");

                    b.HasIndex("ClientFacturarId");

                    b.HasIndex("ClientPagamentId");

                    b.HasIndex("ConcepteCobramentId");

                    b.HasIndex("ContracteId");

                    b.HasIndex("RebutId");

                    b.HasIndex("RebutOriginalId")
                        .IsUnique()
                        .HasFilter("[RebutOriginalId] IS NOT NULL");

                    b.HasIndex("SituacioRebutId");

                    b.HasIndex("UbicacioId");

                    b.ToTable("Rebuts");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.RebutCampanya", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CampanyaId")
                        .HasColumnType("int");

                    b.Property<int>("Estat")
                        .HasColumnType("int");

                    b.Property<decimal>("Import")
                        .HasColumnType("decimal (18,2)");

                    b.Property<decimal>("ImportCobrat")
                        .HasColumnType("decimal (18,2)");

                    b.Property<decimal>("ImportDespeses")
                        .HasColumnType("decimal (18,2)");

                    b.Property<int>("NumRebut")
                        .HasColumnType("int");

                    b.Property<int>("SituacioRebutId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SituacioRebutId");

                    b.ToTable("RebutCampanya");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Reclamacio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CanalEntrada")
                        .HasColumnType("int");

                    b.Property<int>("ContracteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DataLimitResolucio")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DataResposta")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DataSituacio")
                        .HasColumnType("Date");

                    b.Property<string>("Descripcio")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Resposta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Situacio")
                        .HasColumnType("int");

                    b.Property<int>("TipusReclamacioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContracteId");

                    b.HasIndex("TipusReclamacioId");

                    b.ToTable("Reclamacions");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.RutaLectura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Ruta")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("RutesLectura");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.SerieFactura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Comptador")
                        .HasColumnType("int");

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Postfix")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Prefix")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Serie")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("SeriesFactura");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.SerieRebut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Comptador")
                        .HasColumnType("int");

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Postfix")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Prefix")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Serie")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("SeriesRebut");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.ServeiTarifa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Servei")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ServeisTarifa");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.SituacioAdministrativaOT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Situacio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SituacionsAdministrativesOT");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.SituacioFactura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Estat")
                        .HasColumnType("int");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Situacio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SituacionsFactura");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.SituacioRebut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Estat")
                        .HasColumnType("int");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Situacio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SituacionsRebut");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.SolicitudAlta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataSituacio")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DataSolicitud")
                        .HasColumnType("Date");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("Situacio")
                        .HasColumnType("int");

                    b.Property<int>("Solicitant")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("SolicitudsAlta");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.SolicitudBaixa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContracteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataSituacio")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DataSolicitud")
                        .HasColumnType("Date");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("Situacio")
                        .HasColumnType("int");

                    b.Property<int>("Solicitant")
                        .HasColumnType("int");

                    b.Property<int>("TipusBaixaClientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContracteId");

                    b.HasIndex("TipusBaixaClientId");

                    b.ToTable("SolicitudsBaixa");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.SubconcepteTarifa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Actiu")
                        .HasColumnType("bit");

                    b.Property<double>("Bonificacio")
                        .HasColumnType("float");

                    b.Property<int>("ConcepteTarifaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAplicacio")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DataAprovacio")
                        .HasColumnType("Date");

                    b.Property<DateTime?>("DataCaducitat")
                        .HasColumnType("Date");

                    b.Property<bool>("Demora")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<double>("Exempt")
                        .HasColumnType("float");

                    b.Property<int>("FactorCorreccio")
                        .HasColumnType("int");

                    b.Property<int>("FactorMultiplicador")
                        .HasColumnType("int");

                    b.Property<string>("FactorMultiplicadors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Minim")
                        .HasColumnType("float");

                    b.Property<bool>("MultiplicaFactor")
                        .HasColumnType("bit");

                    b.Property<int?>("PartidaAplicarId")
                        .HasColumnType("int");

                    b.Property<int>("Periode")
                        .HasColumnType("int");

                    b.Property<bool>("Prorratejable")
                        .HasColumnType("bit");

                    b.Property<string>("Subconcepte")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TarifaServeiId")
                        .HasColumnType("int");

                    b.Property<double>("Taxa")
                        .HasColumnType("float");

                    b.Property<int>("TipusSubconcepte")
                        .HasColumnType("int");

                    b.Property<int>("Unitats")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.Property<int>("Versio")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConcepteTarifaId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("PartidaAplicarId");

                    b.HasIndex("TarifaServeiId");

                    b.ToTable("SubconceptesTarifa");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.SubconcepteTarifaPartida", b =>
                {
                    b.Property<int>("SubconcepteTarifaId")
                        .HasColumnType("int");

                    b.Property<int>("PartidaId")
                        .HasColumnType("int");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("SubconcepteTarifaId", "PartidaId");

                    b.HasIndex("PartidaId");

                    b.ToTable("SubconceptesTarifaPartida");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Suggeriment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CanalEntrada")
                        .HasColumnType("int");

                    b.Property<int>("ContracteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DataResposta")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DataSituacio")
                        .HasColumnType("Date");

                    b.Property<string>("Descripcio")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Resposta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Situacio")
                        .HasColumnType("int");

                    b.Property<int>("TipusSuggerimentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContracteId");

                    b.HasIndex("TipusSuggerimentId");

                    b.ToTable("Suggeriments");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.TarifaServei", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ServeiTarifaId")
                        .HasColumnType("int");

                    b.Property<string>("Tarifa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ServeiTarifaId");

                    b.ToTable("TarifesServei");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.TipusBaixaClient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipusBaixa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipusBaixaClients");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.TipusCampanya", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Tipus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipusCampanyes");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.TipusClient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Observacions")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Tipus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipusClients");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.TipusComptador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Tipus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipusComptadors");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.TipusConcepteFactura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Tipus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipusConceptesFactura");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.TipusDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Tipus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipusDocuments");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.TipusFactura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Tipus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipusFactures");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.TipusIncidenciaClient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Tipus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipusIncidenciesClient");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.TipusIncidenciaContracte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Tipus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipusIncidenciesContracte");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.TipusIncidenciaLectura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ConsumApte")
                        .HasColumnType("bit");

                    b.Property<bool>("ConsumImputar")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Opcio")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Tipus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipusIncidenciesLectura");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.TipusIncidenciaTecnica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Tipus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipusIncidenciesTecnica");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.TipusIncidenciaUbicacio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Tipus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipusIncidenciesUbicacio");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.TipusOrdreTreball", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Tipus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipusOrdresTreball");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.TipusQueixa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Tipus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipusQueixes");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.TipusReclamacio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Tipus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipusReclamacions");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.TipusRequerimentTipusOrdreTreball", b =>
                {
                    b.Property<int>("TipusOrdreTreballId")
                        .HasColumnType("int");

                    b.Property<int>("TipusRequerimentOrdreTreballId")
                        .HasColumnType("int");

                    b.Property<bool>("Obligatori")
                        .HasColumnType("bit");

                    b.HasKey("TipusOrdreTreballId", "TipusRequerimentOrdreTreballId");

                    b.ToTable("TipusRequerimentTipusOrdreTreball");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.TipusSuggeriment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Tipus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipusSuggeriment");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.TipusUbicacio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Tipus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipusUbicacions");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.TipusVia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codi")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("Id");

                    b.ToTable("TipusVies");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.TitularCompteContracte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("ContracteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAlta")
                        .HasColumnType("Date");

                    b.Property<DateTime?>("DataBaixa")
                        .HasColumnType("Date");

                    b.Property<string>("IBAN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MotiuBaixaTitularCompteId")
                        .HasColumnType("int");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ContracteId");

                    b.HasIndex("MotiuBaixaTitularCompteId");

                    b.ToTable("TitularsCompteContracte");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.TitularContracte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("ContracteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAlta")
                        .HasColumnType("Date");

                    b.Property<DateTime?>("DataBaixa")
                        .HasColumnType("Date");

                    b.Property<int?>("MotiuBaixaTitularId")
                        .HasColumnType("int");

                    b.Property<string>("Observacions")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ContracteId");

                    b.HasIndex("MotiuBaixaTitularId");

                    b.ToTable("TitularsContracte");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Ubicacio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bloc")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int>("CarrerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAlta")
                        .HasColumnType("Date");

                    b.Property<DateTime?>("DataBaixa")
                        .HasColumnType("Date");

                    b.Property<string>("Escala")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int>("EscomesaId")
                        .HasColumnType("int");

                    b.Property<string>("Localitzacio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("OrdreRutaLectura")
                        .HasColumnType("int");

                    b.Property<string>("Pis")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int>("PoblacioId")
                        .HasColumnType("int");

                    b.Property<string>("Porta")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<Point>("PosicioGeografica")
                        .HasColumnType("geography");

                    b.Property<string>("ReferenciaCatastral")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ResteAdreça")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("RutaLecturaId")
                        .HasColumnType("int");

                    b.Property<string>("SituacioComptador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipusUbicacioId")
                        .HasColumnType("int");

                    b.Property<int>("ZonaUbicacioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarrerId");

                    b.HasIndex("EscomesaId");

                    b.HasIndex("PoblacioId");

                    b.HasIndex("RutaLecturaId");

                    b.HasIndex("TipusUbicacioId");

                    b.HasIndex("ZonaUbicacioId");

                    b.ToTable("Ubicacions");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.UsContracte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codi")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Us")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("UsosContracte");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.ZonaCarrers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Zona")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ZonesCarrers");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.ZonaFacturacio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Zona")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ZonesFacturacio");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.ZonaOrdreTreball", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Zona")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ZonesOrdresTreball");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.ZonaUbicacio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Zona")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ZonesUbicacions");
                });

            modelBuilder.Entity("AquaProWeb.Infrastructure.ConfigEntities.Columna", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amplada")
                        .HasColumnType("int");

                    b.Property<string>("Capçalera")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ColumnaComboId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("EnumeracioId")
                        .HasColumnType("int");

                    b.Property<int>("Ordre")
                        .HasColumnType("int");

                    b.Property<string>("Propietat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TaulaComboId")
                        .HasColumnType("int");

                    b.Property<int>("TaulaId")
                        .HasColumnType("int");

                    b.Property<int>("TipusColumna")
                        .HasColumnType("int");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("TaulaId");

                    b.ToTable("Columna");
                });

            modelBuilder.Entity("AquaProWeb.Infrastructure.ConfigEntities.Enumeracio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Enumeracio");
                });

            modelBuilder.Entity("AquaProWeb.Infrastructure.ConfigEntities.Taula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Simbol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Taula");
                });

            modelBuilder.Entity("AquaProWeb.Infrastructure.ConfigEntities.Usuari", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cognoms")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NomUsuari")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Usuari");
                });

            modelBuilder.Entity("AquaProWeb.Infrastructure.ConfigEntities.ValorEnumeracio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("EnumeracioId")
                        .HasColumnType("int");

                    b.Property<int>("Valor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnumeracioId");

                    b.ToTable("ValorEnumeracio");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.AnotacioCampanya", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.Campanya", null)
                        .WithMany("AnotacionsCampanya")
                        .HasForeignKey("CampanyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.Operari", "Operari")
                        .WithMany()
                        .HasForeignKey("OperariId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operari");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.AnotacioContracte", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.Contracte", null)
                        .WithMany("Anotacions")
                        .HasForeignKey("ContracteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.Operari", "Operari")
                        .WithMany("Anotacions")
                        .HasForeignKey("OperariId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operari");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.AnotacioFactura", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.Factura", null)
                        .WithMany("Anotacions")
                        .HasForeignKey("FacturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.Operari", "Operari")
                        .WithMany()
                        .HasForeignKey("OperariId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operari");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.AnotacioOrdreTreball", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.Operari", "Operari")
                        .WithMany()
                        .HasForeignKey("OperariId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.OrdreTreball", null)
                        .WithMany("Anotacions")
                        .HasForeignKey("OrdreTreballId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operari");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.AnotacioRebut", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.Operari", "Operari")
                        .WithMany()
                        .HasForeignKey("OperariId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.Rebut", null)
                        .WithMany("Anotacions")
                        .HasForeignKey("RebutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operari");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.BlocTarifa", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.SubconcepteTarifa", "SubconcepteTarifa")
                        .WithMany("BlocsTarifa")
                        .HasForeignKey("SubconcepteTarifaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubconcepteTarifa");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Campanya", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.TipusCampanya", "TipusCampanya")
                        .WithMany("Campanyes")
                        .HasForeignKey("TipusCampanyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipusCampanya");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Carrer", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.Poblacio", "Poblacio")
                        .WithMany("Carrers")
                        .HasForeignKey("PoblacioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.TipusVia", "TipusVia")
                        .WithMany("Carrers")
                        .HasForeignKey("TipusViaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.ZonaCarrers", "Zona")
                        .WithMany("Carrers")
                        .HasForeignKey("ZonaCarrersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Poblacio");

                    b.Navigation("TipusVia");

                    b.Navigation("Zona");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.CartaCampanya", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.Campanya", "Campanya")
                        .WithMany("CartesCampanya")
                        .HasForeignKey("CampanyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.Contracte", "Contracte")
                        .WithMany()
                        .HasForeignKey("ContracteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campanya");

                    b.Navigation("Contracte");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Client", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.TipusClient", "TipusClient")
                        .WithMany("Clients")
                        .HasForeignKey("TipusClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.TipusVia", "TipusVia")
                        .WithMany()
                        .HasForeignKey("TipusViaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");

                    b.Navigation("TipusClient");

                    b.Navigation("TipusVia");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Component", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.Escomesa", null)
                        .WithMany("Components")
                        .HasForeignKey("EscomesaId");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Comptador", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.MarcaComptador", "Marca")
                        .WithMany("Comptadors")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.TipusComptador", "Tipus")
                        .WithMany("Comptadors")
                        .HasForeignKey("TipusComptadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");

                    b.Navigation("Tipus");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.ComptadorUbicacio", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.Comptador", "Comptador")
                        .WithMany("ComptadorUbicacions")
                        .HasForeignKey("ComptadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.Operari", "OperariBaixa")
                        .WithMany()
                        .HasForeignKey("OperariBaixaId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AquaProWeb.Domain.Entities.Operari", null)
                        .WithMany("ComptadorsAlta")
                        .HasForeignKey("OperariId");

                    b.HasOne("AquaProWeb.Domain.Entities.Operari", null)
                        .WithMany("ComptadorsBaixa")
                        .HasForeignKey("OperariId1");

                    b.HasOne("AquaProWeb.Domain.Entities.Operari", "OperariInstalacio")
                        .WithMany()
                        .HasForeignKey("OperariInstalacioId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AquaProWeb.Domain.Entities.Ubicacio", "Ubicacio")
                        .WithMany("ComptadorUbicacions")
                        .HasForeignKey("UbicacioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comptador");

                    b.Navigation("OperariBaixa");

                    b.Navigation("OperariInstalacio");

                    b.Navigation("Ubicacio");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.ConcepteFactura", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.FamiliaConcepteFactura", "Familia")
                        .WithMany("ConceptesFactura")
                        .HasForeignKey("FamiliaConcepteFacturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.TipusConcepteFactura", "Tipus")
                        .WithMany("ConceptesFactura")
                        .HasForeignKey("TipusConcepteFacturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Familia");

                    b.Navigation("Tipus");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.ConcepteTarifa", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.ServeiTarifa", null)
                        .WithMany("ConceptesTarifa")
                        .HasForeignKey("ServeiTarifaId");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.ContacteContracte", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.Contracte", "Contracte")
                        .WithMany("ContactesContracte")
                        .HasForeignKey("ContracteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.MotiuBaixaContacte", "MotiuBaixa")
                        .WithMany()
                        .HasForeignKey("MotiuBaixaContacteId");

                    b.Navigation("Client");

                    b.Navigation("Contracte");

                    b.Navigation("MotiuBaixa");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Contracte", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.FamiliaContracte", "Familia")
                        .WithMany("Contractes")
                        .HasForeignKey("FamiliaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.Ubicacio", "Ubicacio")
                        .WithMany("Contractes")
                        .HasForeignKey("UbicacioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.UsContracte", "Us")
                        .WithMany("Contractes")
                        .HasForeignKey("UsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.ZonaFacturacio", "ZonaFacturacio")
                        .WithMany()
                        .HasForeignKey("ZonaFacturacioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Familia");

                    b.Navigation("Ubicacio");

                    b.Navigation("Us");

                    b.Navigation("ZonaFacturacio");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.ContracteTarifaServei", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.Contracte", "Contracte")
                        .WithMany("TarifesServeisContracte")
                        .HasForeignKey("ContracteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.TarifaServei", "TarifaServei")
                        .WithMany("TarifesServeisContracte")
                        .HasForeignKey("TarifaServeiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contracte");

                    b.Navigation("TarifaServei");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.DetallFactura", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.ConcepteFactura", "ConcepteFactura")
                        .WithMany()
                        .HasForeignKey("ConcepteFacturaId");

                    b.HasOne("AquaProWeb.Domain.Entities.Factura", "Factura")
                        .WithMany("DetallFactura")
                        .HasForeignKey("FacturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConcepteFactura");

                    b.Navigation("Factura");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.DetallOrdreTreball", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.ConcepteFactura", "Concepte")
                        .WithMany()
                        .HasForeignKey("ConcepteFacturaId");

                    b.HasOne("AquaProWeb.Domain.Entities.Operari", "Operari")
                        .WithMany()
                        .HasForeignKey("OperariId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.OrdreTreball", "OrdreTreball")
                        .WithMany("DetallsOrdreTreball")
                        .HasForeignKey("OrdreTreballId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Concepte");

                    b.Navigation("Operari");

                    b.Navigation("OrdreTreball");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.DetallRebut", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.Rebut", null)
                        .WithMany("DetallRebut")
                        .HasForeignKey("RebutId");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Document", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.Contracte", "Contracte")
                        .WithMany("DocumentsContracte")
                        .HasForeignKey("ContracteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.Lectura", null)
                        .WithMany("Imatges")
                        .HasForeignKey("LecturaId");

                    b.HasOne("AquaProWeb.Domain.Entities.TipusDocument", "Tipus")
                        .WithMany()
                        .HasForeignKey("TipusDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contracte");

                    b.Navigation("Tipus");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.DocumentCampanya", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.Campanya", null)
                        .WithMany("DocumentsCampanya")
                        .HasForeignKey("CampanyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.Factura", "Factura")
                        .WithMany()
                        .HasForeignKey("FacturaId");

                    b.HasOne("AquaProWeb.Domain.Entities.Rebut", "Rebut")
                        .WithMany()
                        .HasForeignKey("RebutId");

                    b.HasOne("AquaProWeb.Domain.Entities.SituacioFactura", "SituacioFactura")
                        .WithMany()
                        .HasForeignKey("SituacioFacturaId");

                    b.HasOne("AquaProWeb.Domain.Entities.SituacioRebut", "SituacioRebut")
                        .WithMany()
                        .HasForeignKey("SituacioRebutId");

                    b.HasOne("AquaProWeb.Domain.Entities.TipusDocument", "TipusDocument")
                        .WithMany()
                        .HasForeignKey("TipusDocumentId");

                    b.Navigation("Factura");

                    b.Navigation("Rebut");

                    b.Navigation("SituacioFactura");

                    b.Navigation("SituacioRebut");

                    b.Navigation("TipusDocument");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.EntregaACompte", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.ConcepteCobrament", "Concepte")
                        .WithMany()
                        .HasForeignKey("ConcepteCobramentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.Contracte", "Contracte")
                        .WithMany()
                        .HasForeignKey("ContracteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Concepte");

                    b.Navigation("Contracte");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Escomesa", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.Ramal", "Ramal")
                        .WithMany()
                        .HasForeignKey("RamalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ramal");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Factura", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.Client", "ClientEnviament")
                        .WithMany()
                        .HasForeignKey("ClientEnviamentId");

                    b.HasOne("AquaProWeb.Domain.Entities.Client", "ClientFacturar")
                        .WithMany()
                        .HasForeignKey("ClientFacturarId");

                    b.HasOne("AquaProWeb.Domain.Entities.Client", "ClientPagament")
                        .WithMany()
                        .HasForeignKey("ClientPagamentId");

                    b.HasOne("AquaProWeb.Domain.Entities.ConcepteCobrament", "ConcepteCobrament")
                        .WithMany()
                        .HasForeignKey("ConcepteCobramentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.Contracte", "Contracte")
                        .WithMany()
                        .HasForeignKey("ContracteId");

                    b.HasOne("AquaProWeb.Domain.Entities.Factura", "FacturaOrigen")
                        .WithMany("FacturesAssociades")
                        .HasForeignKey("FacturaOrigenId");

                    b.HasOne("AquaProWeb.Domain.Entities.Operari", "Operari")
                        .WithMany()
                        .HasForeignKey("OperariId");

                    b.HasOne("AquaProWeb.Domain.Entities.OrdreTreball", null)
                        .WithMany("Factures")
                        .HasForeignKey("OrdreTreballId");

                    b.HasOne("AquaProWeb.Domain.Entities.Rebut", "RebutOrigen")
                        .WithMany("FacturesAssociades")
                        .HasForeignKey("RebutOrigenId");

                    b.HasOne("AquaProWeb.Domain.Entities.SituacioFactura", "SituacioFactura")
                        .WithMany()
                        .HasForeignKey("SituacioFacturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.TipusFactura", "TipusFactura")
                        .WithMany()
                        .HasForeignKey("TipusFacturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientEnviament");

                    b.Navigation("ClientFacturar");

                    b.Navigation("ClientPagament");

                    b.Navigation("ConcepteCobrament");

                    b.Navigation("Contracte");

                    b.Navigation("FacturaOrigen");

                    b.Navigation("Operari");

                    b.Navigation("RebutOrigen");

                    b.Navigation("SituacioFactura");

                    b.Navigation("TipusFactura");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.FacturaCampanya", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.SituacioFactura", "SituacioFactura")
                        .WithMany()
                        .HasForeignKey("SituacioFacturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SituacioFactura");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.IncidenciaClient", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.Client", null)
                        .WithMany("IncidenciesClient")
                        .HasForeignKey("ClientId");

                    b.HasOne("AquaProWeb.Domain.Entities.TipusIncidenciaClient", "Tipus")
                        .WithMany()
                        .HasForeignKey("TipusIncidenciaClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tipus");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.IncidenciaContracte", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.Contracte", null)
                        .WithMany("IncidenciesContracte")
                        .HasForeignKey("ContracteId");

                    b.HasOne("AquaProWeb.Domain.Entities.TipusIncidenciaContracte", "Tipus")
                        .WithMany()
                        .HasForeignKey("TipusIncidenciaContracteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tipus");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.IncidenciaUbicacio", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.TipusIncidenciaUbicacio", "Tipus")
                        .WithMany()
                        .HasForeignKey("TipusIncidenciaUbicacioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tipus");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Lectura", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.Contracte", "Contracte")
                        .WithMany()
                        .HasForeignKey("ContracteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.RutaLectura", "Ruta")
                        .WithMany()
                        .HasForeignKey("RutaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contracte");

                    b.Navigation("Ruta");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.LecturaComptador", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.Comptador", "Comptador")
                        .WithMany("LecturesComptador")
                        .HasForeignKey("ComptadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.Lectura", "Lectura")
                        .WithMany("LecturesComptador")
                        .HasForeignKey("LecturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.Operari", "Operari")
                        .WithMany()
                        .HasForeignKey("OperariId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.TipusIncidenciaLectura", "IncidenciaLectura")
                        .WithMany()
                        .HasForeignKey("TipusIncidenciaLecturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comptador");

                    b.Navigation("IncidenciaLectura");

                    b.Navigation("Lectura");

                    b.Navigation("Operari");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.OperariOrdre", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.Operari", null)
                        .WithMany("OrdresTreballOperari")
                        .HasForeignKey("OperariId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.Operari", "Operari")
                        .WithMany()
                        .HasForeignKey("OperariId1");

                    b.HasOne("AquaProWeb.Domain.Entities.OrdreTreball", "OrdreTreball")
                        .WithMany("OperarisOrdre")
                        .HasForeignKey("OrdreTreballId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operari");

                    b.Navigation("OrdreTreball");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.OrdreTreball", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.Campanya", null)
                        .WithMany("OrdresTreballCampanya")
                        .HasForeignKey("CampanyaId");

                    b.HasOne("AquaProWeb.Domain.Entities.Client", "Client")
                        .WithMany("OrdresTreball")
                        .HasForeignKey("ClientId");

                    b.HasOne("AquaProWeb.Domain.Entities.Contracte", "Contracte")
                        .WithMany("OrdresTreball")
                        .HasForeignKey("ContracteId");

                    b.HasOne("AquaProWeb.Domain.Entities.Operari", "Creador")
                        .WithMany()
                        .HasForeignKey("CreadorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.Operari", null)
                        .WithMany("OrdresTreballCreador")
                        .HasForeignKey("OperariId");

                    b.HasOne("AquaProWeb.Domain.Entities.Operari", null)
                        .WithMany("OrdresTreballResponsable")
                        .HasForeignKey("OperariId1");

                    b.HasOne("AquaProWeb.Domain.Entities.Operari", "Responsable")
                        .WithMany()
                        .HasForeignKey("ResponsableId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.SituacioAdministrativaOT", "SituacioAdministrativa")
                        .WithMany()
                        .HasForeignKey("SituacioAdministrativaOTId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.TipusOrdreTreball", "Tipus")
                        .WithMany()
                        .HasForeignKey("TipusOrdreTreballId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.ZonaOrdreTreball", "Zona")
                        .WithMany("OrdresTreball")
                        .HasForeignKey("ZonaOrdreTreballId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Contracte");

                    b.Navigation("Creador");

                    b.Navigation("Responsable");

                    b.Navigation("SituacioAdministrativa");

                    b.Navigation("Tipus");

                    b.Navigation("Zona");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Poblacio", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.Explotacio", "Explotacio")
                        .WithMany("Poblacions")
                        .HasForeignKey("ExplotacioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Explotacio");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Queixa", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.Contracte", "Contracte")
                        .WithMany()
                        .HasForeignKey("ContracteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.TipusQueixa", "Tipus")
                        .WithMany()
                        .HasForeignKey("TipusQueixaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contracte");

                    b.Navigation("Tipus");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Rebut", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.Client", "ClientEnviament")
                        .WithMany()
                        .HasForeignKey("ClientEnviamentId");

                    b.HasOne("AquaProWeb.Domain.Entities.Client", "ClientFacturar")
                        .WithMany()
                        .HasForeignKey("ClientFacturarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.Client", "ClientPagament")
                        .WithMany()
                        .HasForeignKey("ClientPagamentId");

                    b.HasOne("AquaProWeb.Domain.Entities.ConcepteCobrament", "ConcepteCobrament")
                        .WithMany()
                        .HasForeignKey("ConcepteCobramentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.Contracte", "Contracte")
                        .WithMany()
                        .HasForeignKey("ContracteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.Rebut", null)
                        .WithMany("RebutsAssociats")
                        .HasForeignKey("RebutId");

                    b.HasOne("AquaProWeb.Domain.Entities.Rebut", "RebutOriginal")
                        .WithOne()
                        .HasForeignKey("AquaProWeb.Domain.Entities.Rebut", "RebutOriginalId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AquaProWeb.Domain.Entities.SituacioRebut", "SituacioRebut")
                        .WithMany()
                        .HasForeignKey("SituacioRebutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.Ubicacio", "Ubicacio")
                        .WithMany()
                        .HasForeignKey("UbicacioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientEnviament");

                    b.Navigation("ClientFacturar");

                    b.Navigation("ClientPagament");

                    b.Navigation("ConcepteCobrament");

                    b.Navigation("Contracte");

                    b.Navigation("RebutOriginal");

                    b.Navigation("SituacioRebut");

                    b.Navigation("Ubicacio");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.RebutCampanya", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.SituacioRebut", "SituacioRebut")
                        .WithMany()
                        .HasForeignKey("SituacioRebutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SituacioRebut");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Reclamacio", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.Contracte", "Contracte")
                        .WithMany()
                        .HasForeignKey("ContracteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.TipusReclamacio", "Tipus")
                        .WithMany()
                        .HasForeignKey("TipusReclamacioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contracte");

                    b.Navigation("Tipus");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.SolicitudAlta", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.SolicitudBaixa", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.Contracte", "Contracte")
                        .WithMany()
                        .HasForeignKey("ContracteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.TipusBaixaClient", "Motiu")
                        .WithMany()
                        .HasForeignKey("TipusBaixaClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contracte");

                    b.Navigation("Motiu");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.SubconcepteTarifa", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.ConcepteTarifa", "ConcepteTarifa")
                        .WithMany("SubconceptesTarifa")
                        .HasForeignKey("ConcepteTarifaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.Empresa", "Empresa")
                        .WithMany("SubconceptesTarifa")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.PartidaTarifa", "PartidaAplicar")
                        .WithMany()
                        .HasForeignKey("PartidaAplicarId");

                    b.HasOne("AquaProWeb.Domain.Entities.TarifaServei", "TarifaServei")
                        .WithMany("Subconceptes")
                        .HasForeignKey("TarifaServeiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConcepteTarifa");

                    b.Navigation("Empresa");

                    b.Navigation("PartidaAplicar");

                    b.Navigation("TarifaServei");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.SubconcepteTarifaPartida", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.PartidaTarifa", "Partida")
                        .WithMany("SubconceptesPartida")
                        .HasForeignKey("PartidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.SubconcepteTarifa", "SubconcepteTarifa")
                        .WithMany("SubconceptesPartida")
                        .HasForeignKey("SubconcepteTarifaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Partida");

                    b.Navigation("SubconcepteTarifa");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Suggeriment", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.Contracte", "Contracte")
                        .WithMany()
                        .HasForeignKey("ContracteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.TipusSuggeriment", "Tipus")
                        .WithMany()
                        .HasForeignKey("TipusSuggerimentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contracte");

                    b.Navigation("Tipus");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.TarifaServei", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.ServeiTarifa", "ServeiTarifa")
                        .WithMany("TarifesServei")
                        .HasForeignKey("ServeiTarifaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServeiTarifa");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.TipusRequerimentTipusOrdreTreball", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.TipusOrdreTreball", null)
                        .WithMany("RequerimentsTipusOrdreTreball")
                        .HasForeignKey("TipusOrdreTreballId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.TitularCompteContracte", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.Client", "TitularCompte")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.Contracte", "Contracte")
                        .WithMany("TitularsCompteContracte")
                        .HasForeignKey("ContracteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.MotiuBaixaTitularCompte", "MotiuBaixa")
                        .WithMany()
                        .HasForeignKey("MotiuBaixaTitularCompteId");

                    b.Navigation("Contracte");

                    b.Navigation("MotiuBaixa");

                    b.Navigation("TitularCompte");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.TitularContracte", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.Client", "Titular")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.Contracte", "Contracte")
                        .WithMany("TitularsContracte")
                        .HasForeignKey("ContracteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.MotiuBaixaTitular", "MotiuBaixa")
                        .WithMany("TitularsContracte")
                        .HasForeignKey("MotiuBaixaTitularId");

                    b.Navigation("Contracte");

                    b.Navigation("MotiuBaixa");

                    b.Navigation("Titular");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Ubicacio", b =>
                {
                    b.HasOne("AquaProWeb.Domain.Entities.Carrer", "Carrer")
                        .WithMany()
                        .HasForeignKey("CarrerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.Escomesa", "Escomesa")
                        .WithMany("Ubicacions")
                        .HasForeignKey("EscomesaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.Poblacio", "Poblacio")
                        .WithMany("Ubicacions")
                        .HasForeignKey("PoblacioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.RutaLectura", "RutaLectura")
                        .WithMany()
                        .HasForeignKey("RutaLecturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.TipusUbicacio", "Tipus")
                        .WithMany("Ubicacions")
                        .HasForeignKey("TipusUbicacioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaProWeb.Domain.Entities.ZonaUbicacio", "Zona")
                        .WithMany("Ubicacions")
                        .HasForeignKey("ZonaUbicacioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrer");

                    b.Navigation("Escomesa");

                    b.Navigation("Poblacio");

                    b.Navigation("RutaLectura");

                    b.Navigation("Tipus");

                    b.Navigation("Zona");
                });

            modelBuilder.Entity("AquaProWeb.Infrastructure.ConfigEntities.Columna", b =>
                {
                    b.HasOne("AquaProWeb.Infrastructure.ConfigEntities.Taula", "Taula")
                        .WithMany("Columnes")
                        .HasForeignKey("TaulaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Taula");
                });

            modelBuilder.Entity("AquaProWeb.Infrastructure.ConfigEntities.ValorEnumeracio", b =>
                {
                    b.HasOne("AquaProWeb.Infrastructure.ConfigEntities.Enumeracio", "Enumeracio")
                        .WithMany("Valors")
                        .HasForeignKey("EnumeracioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enumeracio");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Campanya", b =>
                {
                    b.Navigation("AnotacionsCampanya");

                    b.Navigation("CartesCampanya");

                    b.Navigation("DocumentsCampanya");

                    b.Navigation("OrdresTreballCampanya");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Client", b =>
                {
                    b.Navigation("IncidenciesClient");

                    b.Navigation("OrdresTreball");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Comptador", b =>
                {
                    b.Navigation("ComptadorUbicacions");

                    b.Navigation("LecturesComptador");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.ConcepteTarifa", b =>
                {
                    b.Navigation("SubconceptesTarifa");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Contracte", b =>
                {
                    b.Navigation("Anotacions");

                    b.Navigation("ContactesContracte");

                    b.Navigation("DocumentsContracte");

                    b.Navigation("IncidenciesContracte");

                    b.Navigation("OrdresTreball");

                    b.Navigation("TarifesServeisContracte");

                    b.Navigation("TitularsCompteContracte");

                    b.Navigation("TitularsContracte");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Empresa", b =>
                {
                    b.Navigation("SubconceptesTarifa");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Escomesa", b =>
                {
                    b.Navigation("Components");

                    b.Navigation("Ubicacions");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Explotacio", b =>
                {
                    b.Navigation("Poblacions");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Factura", b =>
                {
                    b.Navigation("Anotacions");

                    b.Navigation("DetallFactura");

                    b.Navigation("FacturesAssociades");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.FamiliaConcepteFactura", b =>
                {
                    b.Navigation("ConceptesFactura");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.FamiliaContracte", b =>
                {
                    b.Navigation("Contractes");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Lectura", b =>
                {
                    b.Navigation("Imatges");

                    b.Navigation("LecturesComptador");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.MarcaComptador", b =>
                {
                    b.Navigation("Comptadors");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.MotiuBaixaTitular", b =>
                {
                    b.Navigation("TitularsContracte");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Operari", b =>
                {
                    b.Navigation("Anotacions");

                    b.Navigation("ComptadorsAlta");

                    b.Navigation("ComptadorsBaixa");

                    b.Navigation("OrdresTreballCreador");

                    b.Navigation("OrdresTreballOperari");

                    b.Navigation("OrdresTreballResponsable");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.OrdreTreball", b =>
                {
                    b.Navigation("Anotacions");

                    b.Navigation("DetallsOrdreTreball");

                    b.Navigation("Factures");

                    b.Navigation("OperarisOrdre");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.PartidaTarifa", b =>
                {
                    b.Navigation("SubconceptesPartida");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Poblacio", b =>
                {
                    b.Navigation("Carrers");

                    b.Navigation("Ubicacions");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Rebut", b =>
                {
                    b.Navigation("Anotacions");

                    b.Navigation("DetallRebut");

                    b.Navigation("FacturesAssociades");

                    b.Navigation("RebutsAssociats");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.ServeiTarifa", b =>
                {
                    b.Navigation("ConceptesTarifa");

                    b.Navigation("TarifesServei");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.SubconcepteTarifa", b =>
                {
                    b.Navigation("BlocsTarifa");

                    b.Navigation("SubconceptesPartida");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.TarifaServei", b =>
                {
                    b.Navigation("Subconceptes");

                    b.Navigation("TarifesServeisContracte");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.TipusCampanya", b =>
                {
                    b.Navigation("Campanyes");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.TipusClient", b =>
                {
                    b.Navigation("Clients");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.TipusComptador", b =>
                {
                    b.Navigation("Comptadors");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.TipusConcepteFactura", b =>
                {
                    b.Navigation("ConceptesFactura");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.TipusOrdreTreball", b =>
                {
                    b.Navigation("RequerimentsTipusOrdreTreball");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.TipusUbicacio", b =>
                {
                    b.Navigation("Ubicacions");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.TipusVia", b =>
                {
                    b.Navigation("Carrers");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.Ubicacio", b =>
                {
                    b.Navigation("ComptadorUbicacions");

                    b.Navigation("Contractes");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.UsContracte", b =>
                {
                    b.Navigation("Contractes");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.ZonaCarrers", b =>
                {
                    b.Navigation("Carrers");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.ZonaOrdreTreball", b =>
                {
                    b.Navigation("OrdresTreball");
                });

            modelBuilder.Entity("AquaProWeb.Domain.Entities.ZonaUbicacio", b =>
                {
                    b.Navigation("Ubicacions");
                });

            modelBuilder.Entity("AquaProWeb.Infrastructure.ConfigEntities.Enumeracio", b =>
                {
                    b.Navigation("Valors");
                });

            modelBuilder.Entity("AquaProWeb.Infrastructure.ConfigEntities.Taula", b =>
                {
                    b.Navigation("Columnes");
                });
#pragma warning restore 612, 618
        }
    }
}
